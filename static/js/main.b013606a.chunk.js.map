{"version":3,"sources":["components/UI/GuessResult/GuessResult.module.css","components/NavUI/Rulebox/Rulebox.module.css","containers/GameBoard/GameBoard.module.css","components/UI/ColorCircle/ColorCircle.module.css","components/UI/ShowColors/ShowColors.module.css","containers/GuessColors/GuessColors.module.css","components/UI/CheckButton/CheckButton.module.css","containers/Layout/Layout.module.css","containers/Navbar/Navbar.module.css","components/NavUI/NavHeading/NavHeading.module.css","components/NavUI/RuleButton/RuleButton.module.css","components/UI/InputColor/inputColor.module.css","components/UI/RestartButton/RestartButton.module.css","containers/GuessSection/GuessSection.module.css","components/UI/ShowResult/ShowResult.module.css","components/NavUI/NavHeading/NavHeading.js","components/NavUI/RuleButton/RuleButton.js","components/NavUI/Rulebox/Rulebox.js","containers/Navbar/Navbar.js","components/UI/ColorCircle/ColorCircle.js","components/UI/InputColor/InputColor.js","components/UI/RestartButton/RestartButton.js","components/UI/GuessResult/GuessResult.js","containers/GuessColors/GuessColors.js","components/UI/ShowColors/ShowColors.js","containers/GuessSection/GuessSection.js","components/UI/CheckButton/CheckButton.js","components/UI/ShowResult/ShowResult.js","assets/github.svg","containers/GameBoard/GameBoard.js","containers/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","navHeading","props","className","classes","NavHeading","ruleButton","onClick","ruleboxToggleHandler","RuleButton","ruleBox","Rulebox","e","stopPropagation","Box","Heading","Button","Navbar","state","showRules","setState","prevState","this","Component","colorCircle","styles","color","backgroundColor","style","selected","Selected","type","Input","Guess","join","clicked","id","inputColor","InputColor","colors","map","i","ColorCircle","selectedColor","selectColorHandler","restartButton","RestartButton","restartButtonHandler","guessResult","GuessResult","undefined","resultArr","Undecided","a","BCorrect","CCorrect","GuessColors","nextProps","selectedGuess","push","guessColors","inputColorHandler","showColors","ShowColors","ID","Check","GuessSection","guesses","result","checkButton","CheckButton","showCheck","Disable","checkGuessHandler","showResult","winner","ShowResult","tryAgain","GameBoard","computerGuess","shuffleArray","array","length","j","Math","floor","random","temp","scrollToBottom","elem","scrollIntoView","block","inline","behavior","updGuessColors","window","location","reload","updResult","indexOf","every","rndind","console","log","Menu","href","GithubIcon","src","githubIcon","alt","Content","ref","size","innerWidth","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b013606a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuessResult\":\"GuessResult_GuessResult__2Dxj1\",\"Undecided\":\"GuessResult_Undecided__16pu5\",\"BCorrect\":\"GuessResult_BCorrect__3BhKz\",\"CCorrect\":\"GuessResult_CCorrect__13DJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rulebox\":\"Rulebox_Rulebox__2iAb9\",\"Box\":\"Rulebox_Box__AS_-a\",\"Heading\":\"Rulebox_Heading__1wUpt\",\"Button\":\"Rulebox_Button__2DtzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__3cCBU\",\"Menu\":\"GameBoard_Menu__34qyL\",\"GithubIcon\":\"GameBoard_GithubIcon__ghiNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Selected\":\"ColorCircle_Selected__3KYb5\",\"Input\":\"ColorCircle_Input__1T3hW\",\"Guess\":\"ColorCircle_Guess__3wXtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowColors\":\"ShowColors_ShowColors__3Z1xr\",\"ID\":\"ShowColors_ID__xQzyG\",\"Check\":\"ShowColors_Check__3E08s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuessColors\":\"GuessColors_GuessColors__1X1Uk\",\"Selected\":\"GuessColors_Selected__2i4uG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckButton\":\"CheckButton_CheckButton__2v7UF\",\"Disable\":\"CheckButton_Disable__2CuWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3QsWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2wlb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavHeading\":\"NavHeading_NavHeading__1zoHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RuleButton\":\"RuleButton_RuleButton__2So-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputColor\":\"inputColor_InputColor__3_EM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RestartButton\":\"RestartButton_RestartButton__1ibg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuessSection\":\"GuessSection_GuessSection__ZqM0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShowResult\":\"ShowResult_ShowResult__J68NV\"};","import classes from \"./NavHeading.module.css\";\r\n\r\nconst navHeading = (props) => {\r\n  return (\r\n    <div className={classes.NavHeading}>\r\n      Master<span>m</span>\r\n      <span>i</span>\r\n      <span>n</span>\r\n      <span>d</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default navHeading;\r\n","import classes from \"./RuleButton.module.css\";\r\n\r\nconst ruleButton = (props) => {\r\n  return (\r\n    <div onClick={props.ruleboxToggleHandler} className={classes.RuleButton}>\r\n      Rules\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ruleButton;\r\n","import classes from \"./Rulebox.module.css\";\r\n\r\nconst ruleBox = (props) => {\r\n  return (\r\n    <div onClick={props.ruleboxToggleHandler} className={classes.Rulebox}>\r\n      <div onClick={(e) => e.stopPropagation()} className={classes.Box}>\r\n        <div className={classes.Heading}>Rules</div>\r\n        <div>\r\n          At the beginning of each game the computer generates a secret code of\r\n          four colors. The colors are always chosen from the same six colors.\r\n          Duplicates are allowed, so the computer could even choose the same\r\n          color four times.\r\n        </div>\r\n        <div>\r\n          Your objective is to guess the secret code. You will have to guess the\r\n          colors and put them in the same order as they are in the secret code.\r\n        </div>\r\n        <div>\r\n          Choose four colors in the next available row and then click on the\r\n          Check button. The computer will score your guess in the following way:\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            For each guess that is right in both color and position you get a\r\n            black point\r\n          </li>\r\n          <li>\r\n            For each guess that is right in color but not in position you get a\r\n            red point\r\n          </li>\r\n        </ul>\r\n        <div>\r\n          You have ten rows to make your guesses, if you exhaust all of them\r\n          without guessing the code, you lost the game. Good Luck!\r\n        </div>\r\n        <button onClick={props.ruleboxToggleHandler} className={classes.Button}>\r\n          OK\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ruleBox;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./Navbar.module.css\";\r\nimport NavHeading from \"../../components/NavUI/NavHeading/NavHeading\";\r\nimport RuleButton from \"../../components/NavUI/RuleButton/RuleButton\";\r\nimport RuleBox from \"../../components/NavUI/Rulebox/Rulebox\";\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    showRules: false,\r\n  };\r\n\r\n  ruleboxToggleHandler = () => {\r\n    this.setState((prevState, props) => ({ showRules: !prevState.showRules }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Navbar}>\r\n        <NavHeading />\r\n        <RuleButton ruleboxToggleHandler={this.ruleboxToggleHandler} />\r\n        {this.state.showRules ? (\r\n          <RuleBox ruleboxToggleHandler={this.ruleboxToggleHandler} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import classes from \"./ColorCircle.module.css\";\r\n\r\nconst colorCircle = (props) => {\r\n  let styles = props.color\r\n    ? {\r\n        backgroundColor: props.color,\r\n      }\r\n    : {\r\n        backgroundColor: \"#ebeef6\",\r\n      };\r\n  return (\r\n    <div\r\n      style={styles}\r\n      className={[\r\n        props.selected ? classes.Selected : \"\",\r\n        props.type === \"input\" ? classes.Input : classes.Guess,\r\n      ].join(\" \")}\r\n      onClick={() => props.clicked(props.id)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default colorCircle;\r\n","import classes from \"./inputColor.module.css\";\r\nimport ColorCircle from \"../ColorCircle/ColorCircle\";\r\n\r\nconst inputColor = (props) => {\r\n  return (\r\n    <div className={classes.InputColor}>\r\n      {props.colors.map((color, i) => (\r\n        <ColorCircle\r\n          key={i}\r\n          id={i}\r\n          color={color}\r\n          selected={props.selectedColor === i ? true : false}\r\n          clicked={props.selectColorHandler}\r\n          type={\"input\"}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inputColor;\r\n","import classes from \"./RestartButton.module.css\";\r\n\r\nconst restartButton = (props) => {\r\n  return (\r\n    <div\r\n      className={classes.RestartButton}\r\n      onClick={props.restartButtonHandler}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default restartButton;\r\n","import classes from \"./GuessResult.module.css\";\r\n\r\nconst guessResult = (props) => {\r\n  return (\r\n    <div className={classes.GuessResult}>\r\n      {props.resultArr === undefined\r\n        ? [\r\n            <div key={0} className={classes.Undecided}></div>,\r\n            <div key={1} className={classes.Undecided}></div>,\r\n            <div key={2} className={classes.Undecided}></div>,\r\n            <div key={3} className={classes.Undecided}></div>,\r\n          ]\r\n        : props.resultArr.map((a, i) => (\r\n            <div\r\n              key={i}\r\n              className={\r\n                a === 2\r\n                  ? classes.BCorrect\r\n                  : a === 1\r\n                  ? classes.CCorrect\r\n                  : classes.Undecided\r\n              }\r\n            ></div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default guessResult;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./GuessColors.module.css\";\r\nimport ColorCircle from \"../../components/UI/ColorCircle/ColorCircle\";\r\n\r\nclass GuessColors extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.selectedGuess === nextProps.id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let colors = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      colors.push(\r\n        <ColorCircle\r\n          key={i}\r\n          id={i}\r\n          color={this.props.inputColor[this.props.guessColors[i]]}\r\n          clicked={this.props.inputColorHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={[\r\n          this.props.selectedGuess === this.props.id ? classes.Selected : \"\",\r\n          classes.GuessColors,\r\n        ].join(\" \")}\r\n      >\r\n        {colors}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GuessColors;\r\n","import classes from \"./ShowColors.module.css\";\r\nimport GuessResult from \"../GuessResult/GuessResult\";\r\nimport GuessColors from \"../../../containers/GuessColors/GuessColors\";\r\n\r\nconst showColors = (props) => {\r\n  return (\r\n    <div className={classes.ShowColors}>\r\n      <div className={classes.ID}>{props.id}</div>\r\n      <GuessColors\r\n        key={props.id}\r\n        id={props.id}\r\n        guessColors={props.guessColors}\r\n        selectedGuess={props.selectedGuess}\r\n        inputColor={props.inputColor}\r\n        inputColorHandler={props.inputColorHandler}\r\n      />\r\n      <div className={classes.Check}>\r\n        <GuessResult resultArr={props.resultArr} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default showColors;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./GuessSection.module.css\";\r\nimport ShowColors from \"../../components/UI/ShowColors/ShowColors\";\r\n\r\nclass GuessSection extends Component {\r\n  render() {\r\n    let guesses = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      guesses.push(\r\n        <ShowColors\r\n          key={i}\r\n          id={i}\r\n          guessColors={this.props.guessColors}\r\n          selectedGuess={this.props.selectedGuess}\r\n          inputColor={this.props.inputColor}\r\n          inputColorHandler={this.props.inputColorHandler}\r\n          resultArr={this.props.result[i]}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div className={classes.GuessSection}>{guesses}</div>;\r\n  }\r\n}\r\n\r\nexport default GuessSection;\r\n","import classes from \"./CheckButton.module.css\";\r\n\r\nconst checkButton = (props) => {\r\n  return (\r\n    <button\r\n      className={[\r\n        classes.CheckButton,\r\n        props.showCheck ? \"\" : classes.Disable,\r\n      ].join(\" \")}\r\n      onClick={props.checkGuessHandler}\r\n    ></button>\r\n  );\r\n};\r\n\r\nexport default checkButton;\r\n","import classes from \"./ShowResult.module.css\";\r\n\r\nconst showResult = (props) => {\r\n  if (props.winner === null) {\r\n    return null;\r\n  } else {\r\n    let result = null;\r\n    if (props.winner) {\r\n      result = (\r\n        <div>\r\n          <span>W</span>\r\n          <span>I</span>\r\n          <span>N</span>\r\n          <span>N</span>\r\n          <span>N</span>\r\n          <span>R</span>\r\n          <span>!</span>\r\n          <span>!</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      result = (\r\n        <div>\r\n          <span>T</span>\r\n          <span>R</span>\r\n          <span>Y</span>\r\n          <span> </span>\r\n          <span>A</span>\r\n          <span>G</span>\r\n          <span>A</span>\r\n          <span>I</span>\r\n          <span>N</span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.ShowResult}>\r\n        {result}\r\n        <button onClick={props.tryAgain}>Play Again</button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default showResult;\r\n","export default __webpack_public_path__ + \"static/media/github.28668213.svg\";","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./GameBoard.module.css\";\r\nimport InputColor from \"../../components/UI/InputColor/InputColor\";\r\nimport RestartButton from \"../../components/UI/RestartButton/RestartButton\";\r\nimport GuessSection from \"../GuessSection/GuessSection\";\r\nimport CheckButton from \"../../components/UI/CheckButton/CheckButton\";\r\nimport ShowResult from \"../../components/UI/ShowResult/ShowResult\";\r\nimport githubIcon from \"../../assets/github.svg\";\r\n\r\nclass GameBoard extends Component {\r\n  state = {\r\n    inputColor: [\r\n      \"#db3a6c\",\r\n      \"#46c6ef\",\r\n      \"#49da9a\",\r\n      \"#f7d038\",\r\n      \"#8e3b97\",\r\n      \"#eb7532\",\r\n    ],\r\n    selectedColor: 0,\r\n    computerGuess: [],\r\n    selectedGuess: 0,\r\n    guessColors: [-1, -1, -1, -1],\r\n    result: {},\r\n    showCheck: false,\r\n    winner: null,\r\n  };\r\n\r\n  shuffleArray = (array) => {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.elem.scrollIntoView({\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  inputColorHandler = (id) => {\r\n    let updGuessColors = [...this.state.guessColors];\r\n    updGuessColors[id] = this.state.selectedColor;\r\n    this.setState({ guessColors: updGuessColors });\r\n  };\r\n\r\n  selectColorHandler = (id) => {\r\n    this.setState({ selectedColor: id });\r\n  };\r\n\r\n  restartButtonHandler = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  checkGuessHandler = () => {\r\n    let updResult = { ...this.state.result };\r\n    updResult[this.state.selectedGuess] = this.state.guessColors.map((a, i) => {\r\n      if (a === this.state.computerGuess[i]) {\r\n        return 2;\r\n      } else if (this.state.computerGuess.indexOf(a) !== -1) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    if (updResult[this.state.selectedGuess].every((a) => a > 1)) {\r\n      this.setState({ winner: true });\r\n      this.scrollToBottom();\r\n    } else if (this.state.selectedGuess === 9) {\r\n      this.setState({ winner: false });\r\n      this.scrollToBottom();\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          selectedGuess: prevState.selectedGuess + 1,\r\n          guessColors: [-1, -1, -1, -1],\r\n          showCheck: false,\r\n        };\r\n      });\r\n    }\r\n    this.shuffleArray(updResult[this.state.selectedGuess]);\r\n    this.setState({ result: updResult });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      this.state.guessColors.every((a) => a > -1) &&\r\n      this.state.showCheck === false\r\n    ) {\r\n      this.setState({ showCheck: true });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.computerGuess.length === 0) {\r\n      let colors = [];\r\n      for (let i = 0; i < 4; i++) {\r\n        let rndind = Math.floor(6 * Math.random());\r\n        colors.push(rndind);\r\n      }\r\n      console.log(colors);\r\n      this.setState({ computerGuess: colors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.GameBoard}>\r\n        <div className={classes.Menu}>\r\n          <InputColor\r\n            colors={this.state.inputColor}\r\n            selectedColor={this.state.selectedColor}\r\n            selectColorHandler={this.selectColorHandler}\r\n          />\r\n          <RestartButton restartButtonHandler={this.restartButtonHandler} />\r\n          <CheckButton\r\n            showCheck={this.state.showCheck}\r\n            checkGuessHandler={this.checkGuessHandler}\r\n          />\r\n          <a href=\"https://github.com/naim30\">\r\n            <div className={classes.GithubIcon}>\r\n              <img src={githubIcon} alt=\"github-icon\" />\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div className={classes.Content}>\r\n          <div ref={(elem) => (this.elem = elem)}>\r\n            <ShowResult\r\n              winner={this.state.winner}\r\n              tryAgain={this.restartButtonHandler}\r\n            />\r\n          </div>\r\n          <GuessSection\r\n            guessColors={this.state.guessColors}\r\n            selectedGuess={this.state.selectedGuess}\r\n            inputColorHandler={this.inputColorHandler}\r\n            inputColor={this.state.inputColor}\r\n            selectedColor={this.state.selectedColor}\r\n            computerGuess={this.state.computerGuess}\r\n            size={this.state.innerWidth > 500 ? 40 : 35}\r\n            result={this.state.result}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport GameBoard from \"../GameBoard/GameBoard\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <Navbar />\r\n        <GameBoard />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import \"./App.css\";\r\nimport Layout from \"./containers/Layout/Layout\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}